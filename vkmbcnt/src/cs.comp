//
// Copyright (c) 2016 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#version 450
#extension GL_AMD_shader_ballot : require
#extension GL_ARB_shader_ballot : require

layout (local_size_x = 64) in;
layout (std430, binding = 0) buffer inputData
{
    float inputDataArray[];
};

layout (std430, binding = 1) buffer outputData
{
    float outputDataArray[];
};

void main ()
{
    float thisLaneData = inputDataArray [gl_LocalInvocationID.x];
    bool laneActive = (thisLaneData > 0);

    uint thisLaneOutputSlot = mbcntAMD (ballotARB (laneActive));

    if (laneActive) {
        outputDataArray[thisLaneOutputSlot] = thisLaneData;
    }
}
